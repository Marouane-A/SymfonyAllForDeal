imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: nomayaconfig.yml }
    - { resource: statconfig.yml }
framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            # other files
            - 'SonataMediaBundle:Form:media_widgets.html.twig'
# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    
    bundles: [ "FOSCommentBundle" ] 
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                mappings:
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    ApplicationSonataClassificationBundle: ~
                    SonataClassificationBundle: ~
                    SonataMediaBundle: ~
                    ApplicationSonataMediaBundle: ~
                    ServiceBundle: ~
                    ProduitBundle: ~
                    ApplicationSonataNewsBundle: ~
                    SonataNewsBundle: ~
                    FOSCommentBundle: ~
# Swiftmailer Configuration
swiftmailer:
    transport: smtp
    encryption: ssl     
    auth_mode:  login   
    host: "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:    
            contexts:   [admin]
        sonata.admin.block.search_result:  
            contexts:   [admin]    
        sonata.block.service.text:  
        sonata.timeline.block.timeline:  
            contexts:   [Profile]

sonata_admin:
    title:                ALL FOR DEAL
    title_logo:           bundles/sonataadmin/all-for-deal.png
sonata_user:
    security_acl: true
    manager_type: orm 
    google_authenticator:
        enabled: true
        server:  gmail.com
    profile:
       
   
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
                - { position: left, type: sonata.block.service.text, settings: { content: "<h3>All For Deal </h3>"} }
                
                - { position: right, type: sonata.timeline.block.timeline, settings: { max_per_page: 15 }}
                - { position: right, type: sonata.news.block.recent_posts, settings: { title: Recent Posts, number: 5, mode: public }}
                - { position: right, type: sonata.news.block.recent_comments, settings: { title: Recent Comments, number: 5, mode: public }}
        # Customize user portal menu by setting links
        menu:
            - { route: 'sonata_user_profile_show', label: 'sonata_profile_title', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
            - { route: 'produit_ajout', label: 'Ajouter un Produit ', domain: 'ProduitBundle'}
            - { route: 'produit_listerP', label: 'Mes Produit ', domain: 'ProduitBundle'}
            - { route: 'service_ajout', label: 'Ajouter un service ', domain: 'ServiceBundle'}
            - { route: 'service_mesService', label: 'Mes Services ', domain: 'ServiceBundle'}

            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}
    
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]        
fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)
   
    profile:  # Authentication Form
        form:
            type:               fos_user_profile
            handler:            fos_user.profile.form.handler.default
            name:               fos_user_profile_form
            validation_groups:  [Authentication] # Please note : this is not the default value
sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
               # - sonata.media.formatter.twig

        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                #- sonata.media.formatter.twig

        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
               # - sonata.media.formatter.twig

        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                #- sonata.media.formatter.twig

        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions
    ckeditor:
        templates:
            browser: 'SonataFormatterBundle:Ckeditor:browser.html.twig'
            upload: 'SonataFormatterBundle:Ckeditor:upload.html.twig'
      
sonata_media:
    # if you don't use default namespace configuration
    class:
        media: Application\Sonata\MediaBundle\Entity\Media
        gallery: Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Sonata\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        
        news:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image

            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}
        
    cdn:
        server:
            path: http://localhost/tecOne/tec/web/uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
sonata_news:
    title:        Sonata Project
    link:         http://localhost/tecOne/tec/web/app_dev.php
    description:  Cool bundles on top of Symfony2
    salt:         'secureToken'
    permalink_generator: sonata.news.permalink.date # sonata.news.permalink.category

    comment:
        notification:
            emails:   [email@example.org, email2@example.org]
            from:     no-reply@sonata-project.org
            template: 'SonataNewsBundle:Mail:comment_notification.txt.twig'      
ivory_ck_editor:
    default_config: news
    configs:
        default:
            filebrowserBrowseRoute: admin_app_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_app_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
                hide_context: true
                context: default
            filebrowserUploadRoute: admin_app_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
                hide_context: true
                context: default
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_app_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: default # Optional, to upload in a custom context

        news:
            filebrowserBrowseRoute: admin_app_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_app_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
                hide_context: true
                context: news
            filebrowserUploadRoute: admin_app_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
                context: news
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_app_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: news # Optional, to upload in a custom context      
                
#spy_timeline:
#    drivers:
#        orm:
#            object_manager: doctrine.orm.entity_manager
#            classes:
#                query_builder: ~ # Spy\TimelineBundle\Driver\ORM\QueryBuilder\QueryBuilder
#                timeline:         Application\Sonata\TimelineBundle\Entity\Timeline
#                action:           Application\Sonata\TimelineBundle\Entity\Action
#                component:        Application\Sonata\TimelineBundle\Entity\Component
#                action_component: Application\Sonata\TimelineBundle\Entity\ActionComponent
#
#    filters:
#        data_hydrator:
#            priority:             20
#            service:              spy_timeline.filter.data_hydrator
#            filter_unresolved:    false
#            locators:
#                - spy_timeline.filter.data_hydrator.locator.doctrine_orm          
#sonata_timeline:
#    manager_type:         orm
#    class:
#        timeline:         "%spy_timeline.class.timeline%"
#        action:           "%spy_timeline.class.action%"
#        component:        "%spy_timeline.class.component%"
#        action_component: "%spy_timeline.class.action_component%"      

fos_comment:
    db_driver: orm
    class:
        model:
            comment: Application\ServiceBundle\Entity\Comment
            thread: Application\ServiceBundle\Entity\Thread
            vote: Application\ServiceBundle\Entity\Vote
fos_rest:
    view:
        formats:
            rss: true
            xml: false
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig